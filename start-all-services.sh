#!/bin/bash
################################################################################
# AIFX v2 - Start All Services Script
#
# This script starts all AIFX v2 services in the background using tmux
#
# Usage:
#   ./start-all-services.sh
#
# To view running services:
#   tmux list-sessions
#   tmux attach -t aifx-backend    (attach to backend)
#   tmux attach -t aifx-frontend   (attach to frontend)
#   tmux attach -t aifx-ml         (attach to ml engine)
#
# To detach from tmux: Press Ctrl+B then D
#
# To stop all services:
#   ./stop-all-services.sh
#
# Generated by Claude Code
################################################################################

set -e

# Colors
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

log_info() {
    echo -e "${BLUE}[INFO]${NC} $1"
}

log_success() {
    echo -e "${GREEN}[SUCCESS]${NC} $1"
}

log_error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

# Check if tmux is installed
if ! command -v tmux &> /dev/null; then
    log_info "tmux not installed. Installing..."
    sudo apt update > /dev/null 2>&1
    sudo apt install tmux -y > /dev/null 2>&1
    log_success "tmux installed"
fi

# Project root
PROJECT_ROOT="/root/AIFX_v2"

echo "=============================================================================="
echo "              AIFX v2 - Starting All Services                               "
echo "=============================================================================="
echo ""

# Check if services are already running
if tmux has-session -t aifx-backend 2>/dev/null; then
    log_error "Backend session already exists. Stop it first with: tmux kill-session -t aifx-backend"
    exit 1
fi

if tmux has-session -t aifx-frontend 2>/dev/null; then
    log_error "Frontend session already exists. Stop it first with: tmux kill-session -t aifx-frontend"
    exit 1
fi

if tmux has-session -t aifx-ml 2>/dev/null; then
    log_error "ML Engine session already exists. Stop it first with: tmux kill-session -t aifx-ml"
    exit 1
fi

# Start Backend
log_info "Starting Backend server (port 3000)..."
tmux new-session -d -s aifx-backend -c "$PROJECT_ROOT/backend" "npm run dev"
sleep 2
log_success "Backend started in tmux session 'aifx-backend'"

# Start Frontend
log_info "Starting Frontend dev server (port 5173)..."
tmux new-session -d -s aifx-frontend -c "$PROJECT_ROOT/frontend" "npm run dev"
sleep 2
log_success "Frontend started in tmux session 'aifx-frontend'"

# Start ML Engine
log_info "Starting ML Engine API (port 8000)..."
tmux new-session -d -s aifx-ml -c "$PROJECT_ROOT/ml_engine" "source venv/bin/activate && uvicorn api.ml_server:app --reload --host 0.0.0.0 --port 8000"
sleep 2
log_success "ML Engine started in tmux session 'aifx-ml'"

echo ""
echo "=============================================================================="
echo "                    All Services Started! 🚀                                "
echo "=============================================================================="
echo ""
echo "✅ Backend:  http://localhost:3000  (tmux session: aifx-backend)"
echo "✅ Frontend: http://localhost:5173  (tmux session: aifx-frontend)"
echo "✅ ML API:   http://localhost:8000  (tmux session: aifx-ml)"
echo ""
echo "📺 View Running Services:"
echo "   tmux list-sessions"
echo ""
echo "🔗 Attach to Service (to view logs):"
echo "   tmux attach -t aifx-backend"
echo "   tmux attach -t aifx-frontend"
echo "   tmux attach -t aifx-ml"
echo ""
echo "⌨️  Detach from tmux session:"
echo "   Press Ctrl+B then D"
echo ""
echo "🛑 Stop All Services:"
echo "   ./stop-all-services.sh"
echo ""
echo "🔍 Check Service Status:"
echo "   ./check-services.sh"
echo ""
echo "=============================================================================="
echo ""

# Wait a bit for services to start
log_info "Waiting for services to initialize..."
sleep 5

# Check if services are responding
log_info "Checking service health..."

# Check Backend
if curl -s http://localhost:3000/api/v1/health > /dev/null 2>&1; then
    log_success "Backend is responding"
else
    log_error "Backend is not responding yet (may still be starting up)"
fi

# Check Frontend
if curl -s http://localhost:5173 > /dev/null 2>&1; then
    log_success "Frontend is responding"
else
    log_error "Frontend is not responding yet (may still be starting up)"
fi

# Check ML Engine
if curl -s http://localhost:8000/health > /dev/null 2>&1; then
    log_success "ML Engine is responding"
else
    log_error "ML Engine is not responding yet (may still be starting up)"
fi

echo ""
log_info "All services have been started. It may take a few more seconds for them to be fully ready."
echo ""
